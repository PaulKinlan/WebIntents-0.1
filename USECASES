Send File + Share File

** Usecase 1 **

A user uses a web based email provider to send and recieve email. The user also is manipulating a file in an online image editing application and wants to send the file as an email.

Currently, the user has to either, download the file into a temporary directory and then upload it to the email client. Or, the image editing application has to provide send functionality directly in the app.

The current HTML5 spec defines the ability to use the registerProtocolHandler Javascript interface to handle protocols such as mailto://.  This is only a partial solution as it is unable to handle 
attachements. 

** Process **

- The Web-based email client (SERVICE) registers its intention to be able to receive requests "Send a file" with the Intents framework (BROKER)
-- MAY provide a list of supported mime type to indicate the types of files that the SERVICE is willing to handle.
-- MUST provide a protocol SEND
-- MUST register a method that is involked when called

- The Image application (CLIENT) includes the BROKER framework and provides a custom interface for the ability to SEND images.
-- MAY provide a callback mechanism to determine the success of the operation. 

The system is now in a state where it can operate.

- The user wishes to SEND an image and invokes the UI in the CLIENT that will initiate the send.

- The CLIENT asks the BROKER for a list of providers that can handle the SEND command, for the supported mime type.
-- The BROKER returns a list of known services including SERVICE
-- The CLIENT will show a list of services to the USER

- The USER selects the service they want to use for the command

- The CLIENT sends a message to the selected SERVICE
-- The message is formatted using the SEND protocols data format 

** The SEND protocol data format **

The protocol will be named 'http://web-send.org/send/'

It is imperative that consistent protocols are used to send data between applications.  To send a file between applications it must be part of a standardised message format.

Key properties:
- filename (Content-Disposition?)
- mime-type
- length
- uri (base64 encoded? Blob?)

{
  "filename" : "lookatme.png",
  "mime-type" : "",
  "legth" : 8064, 
  "uri" : "data:ADAD....DASDA--"
}

- The Service 

** User Interface **



Usecase 2.

The user of an email provider wants to send an image that is in a known image gallery on the web.  Rather than navigate to the applicaiton and send the file to the email client, the user should be able to ask for a list of applications that support file discovery.  Then once selected, allow the user to pick the file.

Gmail will issue a request to be able to get a list of files from another application

Applications that can
